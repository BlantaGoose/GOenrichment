ANN
ANN = ANN %>% dplyr::select("Orthogroup", "go_id") ##なぜかdplyr::とするとできるようになる
ANN
##出力時に1列目OGs、2列目対応するGO termsになっているようにしたい。
ANN1300 <- ANN[1,] %>% left_join(ANN[2,], by = "Orthogroup") %>%
left_join(ANN[3,], by = "Orthogroup") %>%
left_join(ANN[4,], by = "Orthogroup") %>%
left_join(ANN[5,], by = "Orthogroup") %>%
left_join(ANN[6,], by = "Orthogroup") %>%
left_join(ANN[7,], by = "Orthogroup") %>%
left_join(ANN[8,], by = "Orthogroup") %>%
left_join(ANN[9,], by = "Orthogroup") %>%
left_join(ANN[10,], by = "Orthogroup") %>%
left_join(ANN[11,], by = "Orthogroup") %>%
left_join(ANN[12,], by = "Orthogroup") %>%
left_join(ANN[13,], by = "Orthogroup") %>%
left_join(ANN[14,], by = "Orthogroup") %>%
left_join(ANN[15,], by = "Orthogroup") %>%
left_join(ANN[16,], by = "Orthogroup") %>%
left_join(ANN[17,], by = "Orthogroup") %>%
left_join(ANN[18,], by = "Orthogroup") %>%
left_join(ANN[19,], by = "Orthogroup")
ANN1300
ANN = ANN %>% dplyr::select("Orthogroup", "go_id") ##なぜかdplyr::とするとできるようになる
ANN
ANN1373 <- Ann[20,]
ANN1373 <- ANN[20,]
ANN1923 <- ANN[21,]
ANN0819 <- ANN[22,] %>% left_join(ANN[23,], by = "Orthogroup") %>%
left_join(ANN[24,], by = "Orthogroup") %>%
left_join(ANN[25,], by = "Orthogroup") %>%
left_join(ANN[26,], by = "Orthogroup") %>%
left_join(ANN[27,], by = "Orthogroup") %>%
left_join(ANN[28,], by = "Orthogroup") %>%
left_join(ANN[29,], by = "Orthogroup") %>%
left_join(ANN[30,], by = "Orthogroup") %>%
left_join(ANN[31,], by = "Orthogroup") %>%
left_join(ANN[32,], by = "Orthogroup") %>%
left_join(ANN[33,], by = "Orthogroup") %>%
left_join(ANN[34,], by = "Orthogroup") %>%
left_join(ANN[35,], by = "Orthogroup") %>%
left_join(ANN[36,], by = "Orthogroup") %>%
left_join(ANN[37,], by = "Orthogroup") %>%
left_join(ANN[38,], by = "Orthogroup") %>%
left_join(ANN[39,], by = "Orthogroup") %>%
left_join(ANN[40,], by = "Orthogroup") %>%
left_join(ANN[41,], by = "Orthogroup") %>%
left_join(ANN[42,], by = "Orthogroup") %>%
left_join(ANN[43,], by = "Orthogroup") %>%
left_join(ANN[44,], by = "Orthogroup") %>%
left_join(ANN[45,], by = "Orthogroup") %>%
left_join(ANN[46,], by = "Orthogroup") %>%
left_join(ANN[47,], by = "Orthogroup") %>%
left_join(ANN[48,], by = "Orthogroup") %>%
left_join(ANN[49,], by = "Orthogroup") %>%
left_join(ANN[50,], by = "Orthogroup") %>%
left_join(ANN[51,], by = "Orthogroup") %>%
left_join(ANN[52,], by = "Orthogroup") %>%
left_join(ANN[53,], by = "Orthogroup") %>%
left_join(ANN[54,], by = "Orthogroup") %>%
left_join(ANN[55,], by = "Orthogroup") %>%
left_join(ANN[56,], by = "Orthogroup") %>%
left_join(ANN[57,], by = "Orthogroup") %>%
left_join(ANN[58,], by = "Orthogroup") %>%
left_join(ANN[59,], by = "Orthogroup") %>%
left_join(ANN[60,], by = "Orthogroup") %>%
left_join(ANN[61,], by = "Orthogroup") %>%
left_join(ANN[62,], by = "Orthogroup") %>%
left_join(ANN[63,], by = "Orthogroup") %>%
left_join(ANN[64,], by = "Orthogroup") %>%
left_join(ANN[65,], by = "Orthogroup") %>%
left_join(ANN[66,], by = "Orthogroup") %>%
left_join(ANN[67,], by = "Orthogroup")
ANN0819
ANN
ANN0059 <- ANN[68,] %>% left_join(ANN[69,], by = "Orthogroup") %>%
left_join(ANN[70,], by = "Orthogroup") %>%
left_join(ANN[71,], by = "Orthogroup") %>%
left_join(ANN[72,], by = "Orthogroup")
ANN0059
ANN0436 <- ANN[73,] %>% left_join(ANN[74,], by = "Orthogroup") %>%
left_join(ANN[75,], by = "Orthogroup") %>%
left_join(ANN[76,], by = "Orthogroup") %>%
left_join(ANN[77,], by = "Orthogroup")
ANN0436
ANN0798 <- ANN[78,] %>% left_join(ANN[79,], by = "Orthogroup") %>%
left_join(ANN[80,], by = "Orthogroup") %>%
left_join(ANN[81,], by = "Orthogroup") %>%
ANN %>% write.table("/Users/araisota/research/enrichment/topGO/ANN.txt",
quote = F, col.names = T)
ANN0798 <- ANN[78,] %>% left_join(ANN[79,], by = "Orthogroup") %>%
left_join(ANN[80,], by = "Orthogroup") %>%
left_join(ANN[81,], by = "Orthogroup") %>%
ANN %>% write.table("/Users/araisota/research/enrichment/topGO/ANN.txt",
quote = F, col.names = T)
ANN0436 <- ANN[73,] %>% left_join(ANN[74,], by = "Orthogroup") %>%
left_join(ANN[75,], by = "Orthogroup") %>%
left_join(ANN[76,], by = "Orthogroup") %>%
left_join(ANN[77,], by = "Orthogroup")
ANN0436
ANN0798 <- ANN[78,] %>% left_join(ANN[79,], by = "Orthogroup") %>%
left_join(ANN[80,], by = "Orthogroup") %>%
left_join(ANN[81,], by = "Orthogroup") %>%
ANN %>% write.table("/Users/araisota/research/enrichment/topGO/ANN.txt",
quote = F, col.names = T)
ANN0798 <- ANN[78,] %>% left_join(ANN[79,], by = "Orthogroup") %>%
left_join(ANN[80,], by = "Orthogroup") %>%
left_join(ANN[81,], by = "Orthogroup")
ANN0798
ANN1300
ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, GOID, sep = " ")
ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id, sep = " ")
ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y go_id, sep = " ")
ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN0819
##7CorvidaeのtopGO解析を行う。カラスノードにおけるGFの機能は、全７種の鳥類を使用したときとは異なる偏りをしているのでは。
library(topGO)
library(tidyverse)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
ANN <- read.table(file = "ANNOTATION.csv")
ANN
ANN = ANN %>% dplyr::select("Orthogroup", "go_id") ##なぜかdplyr::とするとできるようになる
ANN
geneID2GO <- geneID2GO %>% dplyr::select("Orthogroup", "go_id")
library(topGO)
library(tidyverse)
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
geneID2GO <- geneID2GO %>% dplyr::select("Orthogroup", "go_id")
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
geneID2GO
geneID2GO <- geneID2GO %>% dplyr::select("Orthogroup", "go_id")
geneID2GO
geneID2GO <- geneID2GO %>% dplyr::select("Orthogroup", "go_id")
geneID2GO
geneID2GO <- geneID2GO %>% dplyr::select("Orthogroup", "go_id")
geneID2GO <- geneID2GO %>% dplyr::select("V2", "V6")
geneID2GO
names(ANN)[1] <- "Orthogroup"
names(ANN)[1] <- "Orthogroup"
names(ANN)[2] <- "go_id"
##出力時に1列目OGs、2列目対応するGO termsになっているようにしたい。
##ここの作業はPythonでやろう。あほくさい
ANN1300 <- ANN[1,] %>% left_join(ANN[2,], by = "Orthogroup") %>%
left_join(ANN[3,], by = "Orthogroup") %>%
left_join(ANN[4,], by = "Orthogroup") %>%
left_join(ANN[5,], by = "Orthogroup") %>%
left_join(ANN[6,], by = "Orthogroup") %>%
left_join(ANN[7,], by = "Orthogroup") %>%
left_join(ANN[8,], by = "Orthogroup") %>%
left_join(ANN[9,], by = "Orthogroup") %>%
left_join(ANN[10,], by = "Orthogroup") %>%
left_join(ANN[11,], by = "Orthogroup") %>%
left_join(ANN[12,], by = "Orthogroup") %>%
left_join(ANN[13,], by = "Orthogroup") %>%
left_join(ANN[14,], by = "Orthogroup") %>%
left_join(ANN[15,], by = "Orthogroup") %>%
left_join(ANN[16,], by = "Orthogroup") %>%
left_join(ANN[17,], by = "Orthogroup") %>%
left_join(ANN[18,], by = "Orthogroup") %>%
left_join(ANN[19,], by = "Orthogroup")
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN1373 <- ANN[20,]
ANN1923 <- ANN[21,]
names(ANN1373)[2] <- "go_id.x"
names(ANN1923)[2] <- "go_id.x"
ANN0819 <- ANN[22,] %>% left_join(ANN[23,], by = "Orthogroup") %>%
left_join(ANN[24,], by = "Orthogroup") %>%
left_join(ANN[25,], by = "Orthogroup") %>%
left_join(ANN[26,], by = "Orthogroup") %>%
left_join(ANN[27,], by = "Orthogroup") %>%
left_join(ANN[28,], by = "Orthogroup") %>%
left_join(ANN[29,], by = "Orthogroup") %>%
left_join(ANN[30,], by = "Orthogroup") %>%
left_join(ANN[31,], by = "Orthogroup") %>%
left_join(ANN[32,], by = "Orthogroup") %>%
left_join(ANN[33,], by = "Orthogroup") %>%
left_join(ANN[34,], by = "Orthogroup") %>%
left_join(ANN[35,], by = "Orthogroup") %>%
left_join(ANN[36,], by = "Orthogroup") %>%
left_join(ANN[37,], by = "Orthogroup") %>%
left_join(ANN[38,], by = "Orthogroup") %>%
left_join(ANN[39,], by = "Orthogroup") %>%
left_join(ANN[40,], by = "Orthogroup") %>%
left_join(ANN[41,], by = "Orthogroup") %>%
left_join(ANN[42,], by = "Orthogroup") %>%
left_join(ANN[43,], by = "Orthogroup") %>%
left_join(ANN[44,], by = "Orthogroup") %>%
left_join(ANN[45,], by = "Orthogroup") %>%
left_join(ANN[46,], by = "Orthogroup") %>%
left_join(ANN[47,], by = "Orthogroup") %>%
left_join(ANN[48,], by = "Orthogroup") %>%
left_join(ANN[49,], by = "Orthogroup") %>%
left_join(ANN[50,], by = "Orthogroup") %>%
left_join(ANN[51,], by = "Orthogroup") %>%
left_join(ANN[52,], by = "Orthogroup") %>%
left_join(ANN[53,], by = "Orthogroup") %>%
left_join(ANN[54,], by = "Orthogroup") %>%
left_join(ANN[55,], by = "Orthogroup") %>%
left_join(ANN[56,], by = "Orthogroup") %>%
left_join(ANN[57,], by = "Orthogroup") %>%
left_join(ANN[58,], by = "Orthogroup") %>%
left_join(ANN[59,], by = "Orthogroup") %>%
left_join(ANN[60,], by = "Orthogroup") %>%
left_join(ANN[61,], by = "Orthogroup") %>%
left_join(ANN[62,], by = "Orthogroup") %>%
left_join(ANN[63,], by = "Orthogroup") %>%
left_join(ANN[64,], by = "Orthogroup") %>%
left_join(ANN[65,], by = "Orthogroup") %>%
left_join(ANN[66,], by = "Orthogroup") %>%
left_join(ANN[67,], by = "Orthogroup")
ANN0819 <- ANN0819 %>% unite(go_id.x, go_id.y,
go_id.x.x, go_id.y.y,
go_id.x.x.x, go_id.y.y.y,
go_id.x.x.x.x, go_id.y.y.y.y,
go_id.x.x.x.x.x, go_id.y.y.y.y.y,
go_id.x.x.x.x.x.x, go_id.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,
go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,
go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,
go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y,
go_id.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x,
go_id.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y.y)
ANN0059 <- ANN[68,] %>% left_join(ANN[69,], by = "Orthogroup") %>%
left_join(ANN[70,], by = "Orthogroup") %>%
left_join(ANN[71,], by = "Orthogroup") %>%
left_join(ANN[72,], by = "Orthogroup")
ANN0059 <- ANN0059 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id)
ANN0436 <- ANN[73,] %>% left_join(ANN[74,], by = "Orthogroup") %>%
left_join(ANN[75,], by = "Orthogroup") %>%
left_join(ANN[76,], by = "Orthogroup") %>%
left_join(ANN[77,], by = "Orthogroup")
ANN0436 <- ANN0436 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id)
ANN0798 <- ANN[78,] %>% left_join(ANN[79,], by = "Orthogroup") %>%
left_join(ANN[80,], by = "Orthogroup") %>%
left_join(ANN[81,], by = "Orthogroup")
ANN0798 <- ANN0798 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y)
ANN <- merge(ANN0059, ANN0436, all = T)
ANN
ANN <- merge(ANN, ANN0798, all = T)
ANN
ANN <- merge(ANN, ANN0819, all = T)
ANN <- merge(ANN, ANN1300, all = T)
ANN <- merge(ANN, ANN1373, all = T)
ANN <- merge(ANN, ANN1923, all = T)
ANN
names(ANN)[2] <- "go_id"
ANN %>% write.table("/Users/araisota/research/enrichment/topGO/ANN.txt",
quote = F, col.names = T)
geneID2GO <- readMappings(file = "ANN.txt")
View(ANN)
geneID2GO <- readMappings(file = "ANN.txt", sep = "\t")
geneID2GO <- readMappings(file = "ANN.txt", sep = "\t")
View(ANN)
geneID2GO <- readMappings(file = "ANN.txt", sep = "\t")
geneID2GO <- readMappings(file = "ANN.txt", sep = "_")
View(geneID2GO)
geneID2GO
geneID2GO <- readMappings(file = "ANN.txt")
geneID2GO <- readMappings(file = "ANN.txt", sep = "")
geneID2GO
View(geneID2GO)
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
##出力時に1列目OGs、2列目対応するGO termsになっているようにしたい。
##ここの作業はPythonでやろう。あほくさい
ANN1300 <- ANN[1,] %>% left_join(ANN[2,], by = "Orthogroup") %>%
left_join(ANN[3,], by = "Orthogroup") %>%
left_join(ANN[4,], by = "Orthogroup") %>%
left_join(ANN[5,], by = "Orthogroup") %>%
left_join(ANN[6,], by = "Orthogroup") %>%
left_join(ANN[7,], by = "Orthogroup") %>%
left_join(ANN[8,], by = "Orthogroup") %>%
left_join(ANN[9,], by = "Orthogroup") %>%
left_join(ANN[10,], by = "Orthogroup") %>%
left_join(ANN[11,], by = "Orthogroup") %>%
left_join(ANN[12,], by = "Orthogroup") %>%
left_join(ANN[13,], by = "Orthogroup") %>%
left_join(ANN[14,], by = "Orthogroup") %>%
left_join(ANN[15,], by = "Orthogroup") %>%
left_join(ANN[16,], by = "Orthogroup") %>%
left_join(ANN[17,], by = "Orthogroup") %>%
left_join(ANN[18,], by = "Orthogroup") %>%
left_join(ANN[19,], by = "Orthogroup")
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN1300
##出力時に1列目OGs、2列目対応するGO termsになっているようにしたい。
##ここの作業はPythonでやろう。あほくさい
ANN1300 <- ANN[1,] %>% left_join(ANN[2,], by = "Orthogroup") %>%
left_join(ANN[3,], by = "Orthogroup") %>%
left_join(ANN[4,], by = "Orthogroup") %>%
left_join(ANN[5,], by = "Orthogroup") %>%
left_join(ANN[6,], by = "Orthogroup") %>%
left_join(ANN[7,], by = "Orthogroup") %>%
left_join(ANN[8,], by = "Orthogroup") %>%
left_join(ANN[9,], by = "Orthogroup") %>%
left_join(ANN[10,], by = "Orthogroup") %>%
left_join(ANN[11,], by = "Orthogroup") %>%
left_join(ANN[12,], by = "Orthogroup") %>%
left_join(ANN[13,], by = "Orthogroup") %>%
left_join(ANN[14,], by = "Orthogroup") %>%
left_join(ANN[15,], by = "Orthogroup") %>%
left_join(ANN[16,], by = "Orthogroup") %>%
left_join(ANN[17,], by = "Orthogroup") %>%
left_join(ANN[18,], by = "Orthogroup") %>%
left_join(ANN[19,], by = "Orthogroup")
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN1300
ANN <- geneID2GO %>% dplyr::select("V2", "V6")
names(ANN)[1] <- "Orthogroup"
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
ANN <- geneID2GO %>% dplyr::select("V2", "V6")
names(ANN)[1] <- "Orthogroup"
names(ANN)[2] <- "go_id"
##出力時に1列目OGs、2列目対応するGO termsになっているようにしたい。
##ここの作業はPythonでやろう。あほくさい
ANN1300 <- ANN[1,] %>% left_join(ANN[2,], by = "Orthogroup") %>%
left_join(ANN[3,], by = "Orthogroup") %>%
left_join(ANN[4,], by = "Orthogroup") %>%
left_join(ANN[5,], by = "Orthogroup") %>%
left_join(ANN[6,], by = "Orthogroup") %>%
left_join(ANN[7,], by = "Orthogroup") %>%
left_join(ANN[8,], by = "Orthogroup") %>%
left_join(ANN[9,], by = "Orthogroup") %>%
left_join(ANN[10,], by = "Orthogroup") %>%
left_join(ANN[11,], by = "Orthogroup") %>%
left_join(ANN[12,], by = "Orthogroup") %>%
left_join(ANN[13,], by = "Orthogroup") %>%
left_join(ANN[14,], by = "Orthogroup") %>%
left_join(ANN[15,], by = "Orthogroup") %>%
left_join(ANN[16,], by = "Orthogroup") %>%
left_join(ANN[17,], by = "Orthogroup") %>%
left_join(ANN[18,], by = "Orthogroup") %>%
left_join(ANN[19,], by = "Orthogroup")
ANN1300 <- ANN1300 %>% unite(go_id.x, go_id.y, go_id.x.x, go_id.y.y, go_id.x.x.x, go_id.x.x.x.x, go_id.x.x.x.x.x, go_id.y.y.y, go_id.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x, go_id.x.x.x.x.x.x.x.x.x, go_id.y.y.y.y, go_id.y.y.y.y.y, go_id.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y, go_id.y.y.y.y.y.y.y.y.y, go_id, sep = " ")
ANN1300
geneID2GO <- readMappings(file = "ANN.txt", sep = "")
geneID2GO <- readMappings(file = "ANN.txt")
geneID2GO
geneID2GO <- readMappings(file = "ANN.txt")
geneID2GO
geneID2GO <- readMappings(file = "ANN.txt", sep ="")
geneID2GO
library(tidyverse)
read_table(ANN.txt)
getwd()
read_table(ANN.txt)
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read_table("ANN.txt")
read.table("ANN.txt", sep = ",")
library(topGO)
readMappings(file = "ANN.txt")
readMappings(file = "ANN.txt")
readMappings(file = "ANN.txt")
readMappings(file = "ANN.txt", sep = "\t", IDsep = ",")
library(ALL)
data(ALL)
View(ALL)
affyLib <- paste(annotation(ALL), "db", sep = ".")
library(package = affyLib, character.only = TRUE)
sum(topDiffGenes(geneList))
sampleGOdata <- new("topGOdata",
+ description = "Simple session", ontology = "BP",
+ allGenes = geneList, geneSel = topDiffGenes,
+ nodeSize = 10,
+ annot = annFUN.db, affyLib = affyLib)
sampleGOdata <- new("topGOdata",
description = "Simple session", ontology = "BP",
allGenes = geneList, geneSel = topDiffGenes,
nodeSize = 10,annot = annFUN.db, affyLib = affyLib)
View(sampleGOdata)
#興味ある遺伝子リストと、gene universe内の比較したい遺伝子リストを指摘。gene universeにはyour fileの遺伝子のGO annotationが入っている。
geneUniverse <- names(geneID2GO)
genesOfInterest <- read.table("ANN.txt", header=FALSE)
genesOfInterest <- read.table("ANN.txt", header=TRUE)
read.csv("ANN.txt")
View(ANN)
library(biomaRt)
library(tidyverse)
library(stringr)
##refseq_peptide_predictedの後ろの.1とかを消去する
Falb <- Falb$refseq %>% str_replace(pattern = "\\.\\d", replacement = "")
# http://avrilomics.blogspot.com/2015/07/using-topgo-to-test-for-go-term.html
#1.まずbackgroundを用意
library(tidyverse)
library(topGO)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
view("ANN.txt")
view(ANN)
view(ANN.txt)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
ANN.txt
read.table("ANN.txt")
read.table(ANN.txt)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt") #sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
read.table("ANN.txt")
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t", IDsep = ",") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "", IDsep = ",") #タブ区切りになっていないのならしよう。
geneID2GO
View(geneID2GO)
View(geneID2GO$OG0000059)
View(geneID2GO[c(seq(1,3))])
View(geneID2GO[c(1,)3)])
View(geneID2GO[c(1,3))])
View(geneID2GO[c(1,3)])
View(geneID2GO[c(1,2)])
View(geneID2GO[c(1)])
View(ANN)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt") #タブ区切りになっていないのならしよう。
geneID2GO
geneID2GO
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t") #タブ区切りになっていないのならしよう。
l <- c[1,2,3,4,5]
l <- list(1,2,3,4,5)
l
readMappings(l)
l <- list("a","v","c")
l
readMappings(l)
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "\t") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt") #タブ区切りになっていないのならしよう。
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "") #タブ区切りになっていないのならしよう。
geneID2GO
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "") #タブ区切りになっていないのならしよう。
geneID2GO
View(geneID2GO)
names(ANN)[1] <- "Orthogroup"
names(ANN)[2] <- "go_id"
View(l)
View(geneID2GO)
names(geneID2GO)[1] <- "Orthogroup"
names(geneID2GO)[2] <- "go_id"
dim(geneID2GO)
View(geneID2GO)
len(geneID2GO)
length(geneID2GO)
geneUniverse <- names(geneID2GO) #興味ある遺伝子群と比較する用のものをgeneUniverseから取り出す
genesOfInterest <- read.table("ANN.txt", header = FALSE)
genesOfInterest <- read.table("ANN.txt", sep = "", quote = "", header = FALSE)
genesOfInterest <- read.table("ANN.txt", sep = "", quote = "", comment.char = "", header = FALSE)
genesOfInterest <- read.table("ANN.txt", sep = "", quote = "", comment.char = "")
genesOfInterest <- read.table("ANN.txt", sep = "\t", quote = "", comment.char = "", )
genesOfInterest <- read.table("ANN.txt", sep = "\t", quote = "", comment.char = "",) #引数をこうするとなんかうまくいく
genesOfInterest <- as.character(genesOfInterest)
geneList <- factor(as.integer(geneUniverse %in% genesOfInterest))
names(geneList) <- geneUniverse
#Loading your data containing GO-to-gene。file=your data name
#一列目は遺伝子名、二列目はGO terms
geneID2GO <- readMappings(file="ANN.txt", sep = "") #タブ区切りになっていないのならしよう。
geneID2GO #なんかリストになってるけど、仕方なし
names(geneID2GO)[1] <- "Orthogroup"
names(geneID2GO)[2] <- "go_id"
